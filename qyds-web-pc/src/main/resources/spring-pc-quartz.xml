<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        					http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<import resource="classpath:spring-dao.xml"/>

	<context:component-scan base-package="net.dlyt.qyds.web.quartz" />


	<!-- For times when you need more complex processing, passing data to the scheduled job -->
	<bean name="unpayOrderTaskJob" 	class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="net.dlyt.qyds.web.quartz.UnpayOrderTaskJob" />
		<property name="durability" value="true" />
	</bean>

	<!-- Scheduler factory bean to glue together jobDetails and triggers to Configure Quartz Scheduler -->
	<bean  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<!--<ref bean="unpayOrderTaskJob" />-->
			</list>
		</property>

		<!--<property name="triggers">-->
			<!--<list>-->
				<!--<ref bean="unreportTaskCronTrigger" />-->
			<!--</list>-->
		<!--</property>-->

		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">10</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">
					org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
				</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_PC_</prop>
			</props>
		</property>
		<property name="autoStartup" value="true" />
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="overwriteExistingJobs" value="true" />
	</bean>

</beans>