<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--<bean id="propertiesConfig" class="com.gome.ssp.diamond.PropertyPlaceholderConfigurerLoader"/>-->

    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"-->
          <!--destroy-method="close">-->
        <!--<property name="driverClass" value="org.postgresql.Driver"/>-->
        <!--&lt;!&ndash;<property name="jdbcUrl" value="jdbc:postgresql://120.26.230.73:5432/qyds_dev"/>&ndash;&gt;-->
        <!--<property name="jdbcUrl" value="jdbc:postgresql://127.0.0.1:5432/qyds_dev"/>-->
        <!--<property name="user" value="postgres"/>-->
        <!--<property name="password" value="postgres"/>-->
        <!--<property name="initialPoolSize" value="10"/>-->
        <!--<property name="minPoolSize" value="10"/>-->
        <!--<property name="maxPoolSize" value="200"/>-->
        <!--<property name="acquireIncrement" value="10"/>-->
        <!--<property name="maxIdleTime" value="20"/>-->
        <!--<property name="maxStatements" value="0"/>-->


    <!--</bean>-->

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <!--远程服务器-->
        <!--<property name="url" value="jdbc:postgresql://114.215.78.85:5432/postgres" />-->
        <!--远程服务器-->
        <property name="url" value="jdbc:postgresql://localhost:5432/test" />

        <!--测试服务器-->
        <!-- <property name="url" value="jdbc:postgresql://127.0.0.1:5432/postgres" />-->
        <!--测试服务器-->
        <!--<property name="url" value="jdbc:postgresql://127.0.0.1:5432/postgres_new" />-->
        <!--<property name="url" value="jdbc:postgresql://120.26.230.73:5432/qyds_test" />-->

        <!--远程服务器-->
        <!--<property name="username" value="postgres" />
        <property name="password" value="zaq1ZAQ!" />-->
        <!--远程服务器-->

        <property name="username" value="postgres" />
        <property name="password" value="111111" />

        <!--测试服务器-->
        <!-- <property name="username" value="postgres" />
         <property name="password" value="zaq1ZAQ!" />-->
        <!--测试服务器-->

        <!--<property name="password" value="DLYT@dlyt.net20150112" />-->

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 1 FROM sys_code"/>
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/**/*.xml"/>
        <property name="typeAliasesPackage" value="net.dlyt.qyds.common.dto"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="net.dlyt.qyds.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <context:component-scan base-package="net.dlyt.qyds.dao" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>