<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.dlyt.qyds.dao.ext.MmbGroupMapperExt">
    <resultMap id="BaseResultMap" type="net.dlyt.qyds.common.dto.ext.MmbGroupExt">
        <id column="group_id" property="groupId" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="type_name" property="typeName" jdbcType="VARCHAR"/>
        <result column="group_name" property="groupName" jdbcType="VARCHAR"/>
        <result column="is_valid" property="isValid" jdbcType="VARCHAR"/>
        <result column="deleted" property="deleted" jdbcType="VARCHAR"/>
        <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR"/>
        <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="insert_user_id" property="insertUserId" jdbcType="VARCHAR"/>
        <result column="insert_user_name" property="insertUserName" jdbcType="VARCHAR"/>
        <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectGroupList" resultMap="BaseResultMap" parameterType="net.dlyt.qyds.common.form.MmbGroupForm">
        select mg.*,
        cc.display_cn as type_name, su1.user_name as insert_user_name, su2.user_name as update_user_name
        from public.mmb_group mg
        left join com_code cc on cc.code = 'MEMBER_GROUP_TYPE' and mg.type = cc.value and cc.deleted = '0'
        left join sys_user su1 on cast(su1.user_id as varchar) = mg.insert_user_id
        left join sys_user su2 on cast(su2.user_id as varchar) = mg.update_user_id
        where mg.deleted = '0'
        <if test="groupName!=null and !groupName.isEmpty() ">
            AND mg.group_name LIKE CONCAT(CONCAT('%', #{groupName, jdbcType=VARCHAR}),'%')
        </if>
        <if test="type!=null and !type.isEmpty() ">
            AND mg.type = #{type, jdbcType=VARCHAR}
        </if>
        order by mg.update_time desc limit #{iDisplayLength,jdbcType=INTEGER} offset #{iDisplayStart,jdbcType=INTEGER}
    </select>

    <select id="getGroupListCount" resultType="java.lang.Integer"
            parameterType="net.dlyt.qyds.common.form.MmbGroupForm">
        select count(*)
        from public.mmb_group mg
        where mg.deleted = '0'
        <if test="groupName!=null and !groupName.isEmpty() ">
            AND mg.group_name LIKE CONCAT(CONCAT('%', #{groupName, jdbcType=VARCHAR}),'%')
        </if>
        <if test="type!=null and !type.isEmpty() ">
            AND mg.type = #{type, jdbcType=VARCHAR}
        </if>
    </select>


    <select id="countGroupByName" resultType="java.lang.Integer"
            parameterType="net.dlyt.qyds.common.form.MmbGroupForm">
        select count(*)
        from public.mmb_group mg
        where mg.deleted = '0'
        <if test="groupName!=null and !groupName.isEmpty() ">
            AND mg.group_name = #{groupName, jdbcType=VARCHAR}
        </if>
        <if test="groupId!=null and !groupId.isEmpty() ">
            AND mg.group_id != #{groupId, jdbcType=VARCHAR}
        </if>
    </select>

    <select id="select" resultMap="BaseResultMap" parameterType="java.lang.String">
        select mg.*,
        cc.display_cn as type_name, su1.user_name insert_user_name, su2.user_name update_user_name
        from public.mmb_group mg
        left join com_code cc on cc.code = 'MEMBER_GROUP_TYPE' and mg.type = cc.value and cc.deleted = '0'
        left join sys_user su1 on cast(su1.user_id as varchar) = mg.insert_user_id
        left join sys_user su2 on cast(su2.user_id as varchar) = mg.update_user_id
        where mg.deleted = '0'
        AND mg.group_id = #{groupId, jdbcType=VARCHAR}
    </select>


    <resultMap id="MmbGroupMemberResultMap" type="net.dlyt.qyds.common.dto.ext.MmbGroupMemberExt">
        <id column="group_member_id" property="groupMemberId" jdbcType="VARCHAR"/>
        <result column="group_id" property="groupId" jdbcType="VARCHAR"/>
        <result column="member_id" property="memberId" jdbcType="VARCHAR"/>
        <result column="is_valid" property="isValid" jdbcType="VARCHAR"/>
        <result column="creat_user_id" property="creatUserId" jdbcType="VARCHAR"/>
        <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP"/>
        <result column="deleted" property="deleted" jdbcType="VARCHAR"/>
        <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="insert_user_id" property="insertUserId" jdbcType="VARCHAR"/>
        <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP"/>

        <result column="member_name" property="memberName" jdbcType="VARCHAR"/>
        <result column="member_level_id" property="memberLevelId" jdbcType="VARCHAR"/>
        <result column="member_level_name" property="memberLevelName" jdbcType="VARCHAR"/>
        <result column="member_type" property="memberType" jdbcType="VARCHAR"/>
        <result column="member_type_name" property="memberTypeName" jdbcType="VARCHAR"/>
        <result column="member_status" property="memberStatus" jdbcType="VARCHAR"/>
    </resultMap>


    <select id="selectMemberList" resultMap="MmbGroupMemberResultMap"
            parameterType="net.dlyt.qyds.common.form.MmbGroupForm">

        SELECT * FROM
        (
        select distinct
        mm.member_id,
        mm.member_name,
        mm.member_level_id,
        cc1.display_cn member_level_name,
        mm.type member_type,
        cc2.display_cn member_type_name,
        mgm.group_id,
        case when mgm.group_id is not null then '0' else '1' end as member_status
        from mmb_master mm

        left join mmb_group_member mgm on mgm.member_id = mm.member_id and mgm.deleted = '0' and mgm.group_id =
        #{groupId}
        left join com_code cc1 on cc1.code = 'MEMBER_LEVEL' and mm.member_level_id = cc1.value and cc1.deleted = '0'
        left join com_code cc2 on cc2.code = 'MEMBER_TYPE' and mm.type = cc2.value and cc2.deleted = '0'
        where mm.deleted = '0'
        <if test="memberType!=null and !memberType.isEmpty() ">
            AND mm.type = #{memberType, jdbcType=VARCHAR}
        </if>
        <if test="memberName!=null and !memberName.isEmpty() ">
            AND mm.member_name LIKE CONCAT(CONCAT('%', #{memberName, jdbcType=VARCHAR}),'%')
        </if>
        <if test="telephone!=null and !telephone.isEmpty() ">
            AND mm.telephone LIKE CONCAT(CONCAT('%', #{telephone, jdbcType=VARCHAR}),'%')
        </if>
        <if test="memberLevelId!=null and !memberLevelId.isEmpty() ">
            AND mm.member_level_id = #{memberLevelId, jdbcType=VARCHAR}
        </if>
        <if test="iTimeStart!=null and !iTimeStart.isEmpty() ">
            AND to_char(mm.insert_time,'yyyy-MM-dd') &gt;= #{iTimeStart}
        </if>
        <if test="iTimeEnd!=null and !iTimeEnd.isEmpty() ">
            AND to_char(mm.insert_time,'yyyy-MM-dd') &lt;= #{iTimeEnd}
        </if>
        <if test="provinceCode!=null and !provinceCode.isEmpty() ">
            AND mm.province_code = #{provinceCode, jdbcType=VARCHAR}
        </if>
        <if test="cityCode!=null and !cityCode.isEmpty() ">
            AND mm.city_code = #{cityCode, jdbcType=VARCHAR}
        </if>
        <if test="districtCode!=null and !districtCode.isEmpty() ">
            AND mm.district_code = #{districtCode, jdbcType=VARCHAR}
        </if>

        ) as allMember

        where
        1=1
        <if test="memberStatus!=null and !memberStatus.isEmpty() ">
            and member_status = #{memberStatus, jdbcType=VARCHAR}
        </if>

        order by member_name, member_id
        limit #{iDisplayLength,jdbcType=INTEGER} offset #{iDisplayStart,jdbcType=INTEGER}
    </select>

    <select id="countMemberList" resultType="java.lang.Integer"
            parameterType="net.dlyt.qyds.common.form.MmbGroupForm">

        SELECT count(*) FROM
        (
        select distinct
        mm.member_id,
        mm.member_name,
        mm.member_level_id,
        cc1.display_cn member_level_name,
        mm.type member_type,
        cc2.display_cn member_type_name,
        mgm.group_id,
        case when mgm.group_id is not null then '0' else '1' end as member_status
        from mmb_master mm

        left join mmb_group_member mgm on mgm.member_id = mm.member_id and mgm.deleted = '0' and mgm.group_id =
        #{groupId}
        left join com_code cc1 on cc1.code = 'MEMBER_LEVEL' and mm.member_level_id = cc1.value and cc1.deleted = '0'
        left join com_code cc2 on cc2.code = 'MEMBER_TYPE' and mm.type = cc2.value and cc2.deleted = '0'
        where mm.deleted = '0'
        <if test="memberType!=null and !memberType.isEmpty() ">
            AND mm.type = #{memberType, jdbcType=VARCHAR}
        </if>
        <if test="memberName!=null and !memberName.isEmpty() ">
            AND mm.member_name LIKE CONCAT(CONCAT('%', #{memberName, jdbcType=VARCHAR}),'%')
        </if>
        <if test="telephone!=null and !telephone.isEmpty() ">
            AND mm.telephone LIKE CONCAT(CONCAT('%', #{telephone, jdbcType=VARCHAR}),'%')
        </if>
        <if test="memberLevelId!=null and !memberLevelId.isEmpty() ">
            AND mm.member_level_id = #{memberLevelId, jdbcType=VARCHAR}
        </if>
        <if test="iTimeStart!=null and !iTimeStart.isEmpty() ">
            AND to_char(mm.insert_time,'yyyy-MM-dd') &gt;= #{iTimeStart}
        </if>
        <if test="iTimeEnd!=null and !iTimeEnd.isEmpty() ">
            AND to_char(mm.insert_time,'yyyy-MM-dd') &lt;= #{iTimeEnd}
        </if>
        <if test="provinceCode!=null and !provinceCode.isEmpty() ">
            AND mm.province_code = #{provinceCode, jdbcType=VARCHAR}
        </if>
        <if test="cityCode!=null and !cityCode.isEmpty() ">
            AND mm.city_code = #{cityCode, jdbcType=VARCHAR}
        </if>
        <if test="districtCode!=null and !districtCode.isEmpty() ">
            AND mm.district_code = #{districtCode, jdbcType=VARCHAR}
        </if>
        ) as allMember

        where
        1=1
        <if test="memberStatus!=null and !memberStatus.isEmpty() ">
            and member_status = #{memberStatus, jdbcType=VARCHAR}
        </if>
    </select>


</mapper>