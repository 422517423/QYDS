<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.dlyt.qyds.dao.MmbVisitMapper" >
  <resultMap id="BaseResultMap" type="net.dlyt.qyds.common.dto.MmbVisit" >
    <id column="visit_no" property="visitNo" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="object_id" property="objectId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="collect_time" property="collectTime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="VARCHAR" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="insert_user_id" property="insertUserId" jdbcType="VARCHAR" />
    <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    visit_no, member_id, type, object_id, name, url, collect_time, deleted, update_user_id, 
    update_time, insert_user_id, insert_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from public.mmb_visit
    where visit_no = #{visitNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from public.mmb_visit
    where visit_no = #{visitNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="net.dlyt.qyds.common.dto.MmbVisit" >
    insert into public.mmb_visit (visit_no, member_id, type, 
      object_id, name, url, 
      collect_time, deleted, update_user_id, 
      update_time, insert_user_id, insert_time
      )
    values (#{visitNo,jdbcType=INTEGER}, #{memberId,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{objectId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{collectTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=VARCHAR}, #{updateUserId,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{insertUserId,jdbcType=VARCHAR}, #{insertTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.dlyt.qyds.common.dto.MmbVisit" >
    insert into public.mmb_visit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="visitNo != null" >
        visit_no,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="objectId != null" >
        object_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="collectTime != null" >
        collect_time,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="insertUserId != null" >
        insert_user_id,
      </if>
      <if test="insertTime != null" >
        insert_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="visitNo != null" >
        #{visitNo,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null" >
        #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null" >
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertUserId != null" >
        #{insertUserId,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="net.dlyt.qyds.common.dto.MmbVisit" >
    update public.mmb_visit
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null" >
        object_id = #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="collectTime != null" >
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertUserId != null" >
        insert_user_id = #{insertUserId,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null" >
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where visit_no = #{visitNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.dlyt.qyds.common.dto.MmbVisit" >
    update public.mmb_visit
    set member_id = #{memberId,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      object_id = #{objectId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      collect_time = #{collectTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      insert_user_id = #{insertUserId,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP}
    where visit_no = #{visitNo,jdbcType=INTEGER}
  </update>
</mapper>